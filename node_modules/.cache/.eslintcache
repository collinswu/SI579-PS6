[{"/Users/wenjiewu/Desktop/hw6/src/index.js":"1","/Users/wenjiewu/Desktop/hw6/src/reportWebVitals.js":"2","/Users/wenjiewu/Desktop/hw6/src/App.js":"3","/Users/wenjiewu/Desktop/hw6/src/components/RhymeButton.js":"4","/Users/wenjiewu/Desktop/hw6/src/components/SynonymsButton.js":"5","/Users/wenjiewu/Desktop/hw6/src/components/WordList.js":"6","/Users/wenjiewu/Desktop/hw6/src/components/Output.js":"7"},{"size":500,"mtime":1648611213630,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1648611213631,"results":"10","hashOfConfig":"9"},{"size":396,"mtime":1648661576907,"results":"11","hashOfConfig":"9"},{"size":291,"mtime":1648661198283,"results":"12","hashOfConfig":"9"},{"size":880,"mtime":1648661125166,"results":"13","hashOfConfig":"9"},{"size":327,"mtime":1648654352700,"results":"14","hashOfConfig":"9"},{"size":4159,"mtime":1648661580147,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jjs55g",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/wenjiewu/Desktop/hw6/src/index.js",[],[],"/Users/wenjiewu/Desktop/hw6/src/reportWebVitals.js",[],[],"/Users/wenjiewu/Desktop/hw6/src/App.js",[],[],"/Users/wenjiewu/Desktop/hw6/src/components/RhymeButton.js",[],[],"/Users/wenjiewu/Desktop/hw6/src/components/SynonymsButton.js",[],[],"/Users/wenjiewu/Desktop/hw6/src/components/WordList.js",[],[],"/Users/wenjiewu/Desktop/hw6/src/components/Output.js",["38","39"],[],"import {useState} from 'react';\nimport WordList from \"./WordList\"\nimport RhymeButton from \"./RhymeButton\"\nimport SynonymsButton from \"./SynonymsButton\"\n\nconst OutputList = () => {\n    const [input, setInput] = useState();\n    const [output, setOutput] = useState();\n    const [saved, setSaved] = useState([]);\n\n    function groupBy(objects, property){\n\n        if(typeof property !== 'function') {\n            const propName = property;\n            property = (obj) => obj[propName];\n        }\n\n        const groupedObjects = new Map();\n\n        for(const object of objects) {\n            const groupName = property(object);\n\n            if(!groupedObjects.has(groupName)) {\n                groupedObjects.set(groupName, []);\n            }\n            groupedObjects.get(groupName).push(object);\n        }\n\n\n        const result = {};\n        for(const key of Array.from(groupedObjects.keys()).sort()) {\n            result[key] = groupedObjects.get(key);\n        }\n        return result;\n    };\n\n    function getRhymeUrl(rel_rhy) {\n        return 'https://api.datamuse.com/words?rel_rhy='+input;\n    }\n\n    const datamuseRequest = (url, callback) => {\n        setOutput(()=>{\n            return <p>...Loading</p>\n        });\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n\n                callback(data);\n            }, (err) => {\n                console.error(err);\n            });\n    };\n\n    function generateWords(term) {\n        const wordlist = term.map((words)=>{\n            return <li key={\"wd\"+words.word}>{words.word} <button onClick={()=>addToSavedWords(words.word)} type=\"button\" className=\"btn btn-secondary\">(save)</button> </li>\n        });\n        return wordlist;\n    }\n\n    const rhyme = (result) => {\n        const groupOutput = groupBy(result,\"numSyllables\");\n        const wordToShow = [];\n        if (result.length !== 0) {\n            wordToShow.push(<h2 key=\"title\">Words that rhyme with {input}: </h2>);\n            Object.entries(groupOutput).map(([numSyllables,items],index)=>{\n                // console.log(\"@@@@\",items);\n                wordToShow.push(\n                    <div key={index}>\n                        <h3 key={'title'+index}>Syllables: {numSyllables} </h3>\n                        <ul key={'ul'+index}>\n                            {generateWords(items)}\n                        </ul>\n                    </div>\n                )\n            })\n        } else {\n            wordToShow.push(<p>(no results)</p>);\n        }\n        setOutput(wordToShow);\n    };\n\n    function addToSavedWords(item) {\n        setSaved((previousList)=> {\n            return [...previousList,item]\n        })\n    };\n\n    return (\n        <>\n            <div className=\"row\">\n                <WordList wordList={saved}/>\n            </div>\n            <div className=\"row\">\n                <div className=\"input-group col\">\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Please enter a word\"\n                           onChange={(e)=>{\n                               setInput(e.target.value);\n\n                           }}\n\n                           onKeyDown={(e) => {\n                               if (e.key===\"Enter\"){\n\n                                   datamuseRequest(getRhymeUrl(input),rhyme);\n                               }}}\n                    />\n                    <RhymeButton\n                        input={input}\n                        rhyme={rhyme}\n                        datamuseRequest={datamuseRequest}\n                        getRhymeUrl={getRhymeUrl}\n                    />\n                    <SynonymsButton\n                        input={input}\n                        datamuseRequest={datamuseRequest}\n                        generate={generateWords}\n                        OutputList={setOutput}\n                    />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <h2 className=\"col\"></h2>\n            </div>\n            <div className=\"output row\">\n                <output className=\"col\">{output}</output>\n            </div>\n        </>\n    )\n}\n\nexport default OutputList;",{"ruleId":"40","severity":1,"message":"41","line":67,"column":73,"nodeType":"42","messageId":"43","endLine":67,"endColumn":75},{"ruleId":"44","severity":1,"message":"45","line":125,"column":17,"nodeType":"46","endLine":125,"endColumn":37},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]