{"ast":null,"code":"var _jsxFileName = \"/Users/wenjiewu/Desktop/hw6/src/components/SynonymsButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SynonymsButton = props => {\n  const {\n    datamuseRequest,\n    input,\n    generateWords,\n    setOutputWord\n  } = props;\n\n  function getUrl(ml) {\n    return `https://api.datamuse.com/words?${new URLSearchParams({\n      'ml': input\n    }).toString()}`;\n  }\n\n  ;\n\n  function showSynonyms(output) {\n    const wordToShow = [];\n\n    if (output.length) {\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Words with a similar meaning to \", input, \": \"]\n      }, \"titleSyn\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 29\n      }, this));\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: generateWords(output)\n      }, 'ul', false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 29\n      }, this));\n    } else {\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 29\n      }, this));\n    }\n\n    setOutputWord(wordToShow);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: datamuseRequest(getUrl(input), showSynonyms),\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    children: \"Show synonyms\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SynonymsButton;\nexport default SynonymsButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SynonymsButton\");","map":{"version":3,"sources":["/Users/wenjiewu/Desktop/hw6/src/components/SynonymsButton.js"],"names":["SynonymsButton","props","datamuseRequest","input","generateWords","setOutputWord","getUrl","ml","URLSearchParams","toString","showSynonyms","output","wordToShow","length","push"],"mappings":";;;AAAA,MAAMA,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAACC,IAAAA,eAAD;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,aAAxB;AAAuCC,IAAAA;AAAvC,MAAwDJ,KAA9D;;AAEA,WAASK,MAAT,CAAgBC,EAAhB,EAAoB;AAChB,WAAQ,kCAAkC,IAAIC,eAAJ,CAAoB;AAAC,YAAML;AAAP,KAApB,CAAD,CAAqCM,QAArC,EAAgD,EAAzF;AACH;;AAAA;;AAED,WAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAE1B,UAAMC,UAAU,GAAG,EAAnB;;AACA,QAAID,MAAM,CAACE,MAAX,EAAmB;AACfD,MAAAA,UAAU,CAACE,IAAX,eAAgB;AAAA,uDAAoDX,KAApD;AAAA,SAAQ,UAAR;AAAA;AAAA;AAAA;AAAA,cAAhB;AACAS,MAAAA,UAAU,CAACE,IAAX,eAAgB;AAAA,kBAAcV,aAAa,CAACO,MAAD;AAA3B,SAAQ,IAAR;AAAA;AAAA;AAAA;AAAA,cAAhB;AACH,KAHD,MAGO;AACHC,MAAAA,UAAU,CAACE,IAAX,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AACH;;AACDT,IAAAA,aAAa,CAACO,UAAD,CAAb;AACH;;AAAA;AAID,sBACI;AAAQ,IAAA,OAAO,EAAEV,eAAe,CAACI,MAAM,CAACH,KAAD,CAAP,EAAeO,YAAf,CAAhC;AAA8D,IAAA,IAAI,EAAC,QAAnE;AAA4E,IAAA,SAAS,EAAC,mBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAxBD;;KAAMV,c;AA0BN,eAAeA,cAAf","sourcesContent":["const SynonymsButton = (props) => {\n    const {datamuseRequest,input, generateWords, setOutputWord} = props;\n\n    function getUrl(ml) {\n        return `https://api.datamuse.com/words?${(new URLSearchParams({'ml': input})).toString()}`;\n    };\n\n    function showSynonyms(output) {\n\n        const wordToShow = [];\n        if (output.length) {\n            wordToShow.push(<h2 key=\"titleSyn\">Words with a similar meaning to {input}: </h2>)\n            wordToShow.push(<ul key='ul'>{generateWords(output)}</ul>);\n        } else {\n            wordToShow.push(<p>no result</p>);\n        }\n        setOutputWord(wordToShow);\n    };\n\n\n\n    return (\n        <button onClick={datamuseRequest(getUrl(input),showSynonyms)} type=\"button\" className=\"btn btn-secondary\">Show synonyms</button>\n    )\n};\n\nexport default SynonymsButton;"]},"metadata":{},"sourceType":"module"}