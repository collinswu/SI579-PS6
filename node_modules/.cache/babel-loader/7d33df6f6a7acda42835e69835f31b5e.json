{"ast":null,"code":"var _jsxFileName = \"/Users/wenjiewu/Desktop/hw6/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport SavedWords from \"./components/WordList\";\nimport RhymeButton from \"./components/RhymeButton\";\nimport SynonymsButton from \"./components/SynonymsButton\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputWords, setInputWords] = useState();\n  const [outputWord, setOutputWord] = useState();\n  const [savedWords, setSavedWords] = useState([]);\n\n  function groupBy(objects, property) {\n    if (typeof property !== 'function') {\n      const propName = property;\n\n      property = obj => obj[propName];\n    }\n\n    const groupedObjects = new Map();\n\n    for (const object of objects) {\n      const groupName = property(object);\n\n      if (!groupedObjects.has(groupName)) {\n        groupedObjects.set(groupName, []);\n      }\n\n      groupedObjects.get(groupName).push(object);\n    }\n\n    const result = {};\n\n    for (const key of Array.from(groupedObjects.keys()).sort()) {\n      result[key] = groupedObjects.get(key);\n    }\n\n    return result;\n  }\n\n  ;\n\n  function getDatamuseRhymeUrl(rel_rhy) {\n    return `https://api.datamuse.com/words?${new URLSearchParams({\n      'rel_rhy': inputWords\n    }).toString()}`;\n  }\n\n  const datamuseRequest = (url, callback) => {\n    setOutputWord(() => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    });\n    fetch(url).then(response => response.json()).then(data => {\n      // This invokes the callback that updates the page.\n      callback(data);\n    }, err => {\n      console.error(err);\n    });\n  };\n\n  function generateWords(term) {\n    console.log(\"0000\", term);\n    const wordlist = term.map(words => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [words.word, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToSavedWords(words.word),\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          children: \"(save)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, \"wd\" + words.word, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    });\n    return wordlist;\n  }\n\n  const rhyme = result => {\n    const groupOutput = groupBy(result, \"numSyllables\");\n    const wordToShow = [];\n\n    if (result.length !== 0) {\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Words that rhyme with \", inputWords, \": \"]\n      }, \"title\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this));\n      Object.entries(groupOutput).map((_ref, index) => {\n        let [numSyllables, items] = _ref;\n        wordToShow.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Syllables: \", numSyllables, \" \"]\n          }, 'title' + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: generateWords(items)\n          }, 'ul' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this));\n      });\n    } else {\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"(no results)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this));\n    }\n\n    setOutputWord(wordToShow);\n  };\n\n  function addToSavedWords(item) {\n    setSavedWords(previousList => {\n      // console.log(previousList)\n      return [...previousList, item];\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"row\",\n      children: \"Rhyme Finder 579 (Problem Set 6)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Github link: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JiTLL+FrO2RaOeKDRS7gc7r3TjI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wenjiewu/Desktop/hw6/src/App.js"],"names":["logo","SavedWords","RhymeButton","SynonymsButton","useState","App","inputWords","setInputWords","outputWord","setOutputWord","savedWords","setSavedWords","groupBy","objects","property","propName","obj","groupedObjects","Map","object","groupName","has","set","get","push","result","key","Array","from","keys","sort","getDatamuseRhymeUrl","rel_rhy","URLSearchParams","toString","datamuseRequest","url","callback","fetch","then","response","json","data","err","console","error","generateWords","term","log","wordlist","map","words","word","addToSavedWords","rhyme","groupOutput","wordToShow","length","Object","entries","index","numSyllables","items","item","previousList"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport SavedWords from \"./components/WordList\"\nimport RhymeButton from \"./components/RhymeButton\"\nimport SynonymsButton from \"./components/SynonymsButton\"\nimport {useState} from \"react\";\n\n\nfunction App() {\n\n    const [inputWords, setInputWords] = useState();\n    const [outputWord, setOutputWord] = useState();\n    const [savedWords, setSavedWords] = useState([]);\n\n    function groupBy(objects, property) {\n        if (typeof property !== 'function') {\n            const propName = property;\n            property = (obj) => obj[propName];\n        }\n        const groupedObjects = new Map();\n        for (const object of objects) {\n            const groupName = property(object);\n\n            if (!groupedObjects.has(groupName)) {\n                groupedObjects.set(groupName, []);\n            }\n            groupedObjects.get(groupName).push(object);\n        }\n\n\n        const result = {};\n        for (const key of Array.from(groupedObjects.keys()).sort()) {\n            result[key] = groupedObjects.get(key);\n        }\n        return result;\n    };\n\n    function getDatamuseRhymeUrl(rel_rhy) {\n        return `https://api.datamuse.com/words?${(new URLSearchParams({'rel_rhy': inputWords})).toString()}`;\n    }\n\n    const datamuseRequest = (url, callback) => {\n        setOutputWord(() => {\n            return <p>...Loading</p>\n        });\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n                // This invokes the callback that updates the page.\n                callback(data);\n            }, (err) => {\n                console.error(err);\n            });\n    };\n\n    function generateWords(term) {\n        console.log(\"0000\", term);\n        const wordlist = term.map((words) => {\n\n            return <li key={\"wd\" + words.word}>{words.word}\n                <button onClick={() => addToSavedWords(words.word)} type=\"button\" className=\"btn btn-secondary\">(save)\n                </button>\n            </li>\n        });\n        return wordlist;\n    }\n\n\n    const rhyme = (result) => {\n\n        const groupOutput = groupBy(result, \"numSyllables\");\n\n        const wordToShow = [];\n        if (result.length !== 0) {\n            wordToShow.push(<h2 key=\"title\">Words that rhyme with {inputWords}: </h2>);\n            Object.entries(groupOutput).map(([numSyllables, items], index) => {\n\n                wordToShow.push(\n                    <div key={index}>\n                        <h3 key={'title' + index}>Syllables: {numSyllables} </h3>\n                        <ul key={'ul' + index}>\n                            {generateWords(items)}\n                        </ul>\n                    </div>\n                )\n            })\n        } else {\n            wordToShow.push(<p>(no results)</p>);\n        }\n        setOutputWord(wordToShow);\n    }\n\n    function addToSavedWords(item) {\n        setSavedWords((previousList) => {\n            // console.log(previousList)\n            return [...previousList, item]\n        })\n    };\n\n    return(\n    <main className=\"container\">\n        <h1 className=\"row\">Rhyme Finder 579 (Problem Set 6)</h1>\n        <h2>Github link: <a href=\"#\">#</a> </h2>\n\n    </main>\n);\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}