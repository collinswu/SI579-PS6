{"ast":null,"code":"import _toConsumableArray from\"/Users/wenjiewu/Desktop/hw6/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"/Users/wenjiewu/Desktop/hw6/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/Users/wenjiewu/Desktop/hw6/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import WordList from\"./WordList\";import RhymeButton from\"./RhymeButton\";import SynonymsButton from\"./SynonymsButton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var OutputList=function OutputList(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),output=_useState4[0],setOutput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),saved=_useState6[0],setSaved=_useState6[1];function groupBy(objects,property){if(typeof property!=='function'){var propName=property;property=function property(obj){return obj[propName];};}var groupedObjects=new Map();var _iterator=_createForOfIteratorHelper(objects),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var object=_step.value;var groupName=property(object);if(!groupedObjects.has(groupName)){groupedObjects.set(groupName,[]);}groupedObjects.get(groupName).push(object);}}catch(err){_iterator.e(err);}finally{_iterator.f();}var result={};var _iterator2=_createForOfIteratorHelper(Array.from(groupedObjects.keys()).sort()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var key=_step2.value;result[key]=groupedObjects.get(key);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return result;};function getRhymeUrl(rel_rhy){return'https://api.datamuse.com/words?rel_rhy='+input;}var datamuseRequest=function datamuseRequest(url,callback){setOutput(function(){return/*#__PURE__*/_jsx(\"p\",{children:\"...Loading\"});});fetch(url).then(function(response){return response.json();}).then(function(data){callback(data);},function(err){console.error(err);});};function generateWords(term){var wordlist=term.map(function(words){return/*#__PURE__*/_jsxs(\"li\",{children:[words.word,\" \",/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return addToSavedWords(words.word);},type:\"button\",className:\"btn btn-secondary\",children:\"(save)\"}),\" \"]},\"wd\"+words.word);});return wordlist;}var rhyme=function rhyme(result){var groupOutput=groupBy(result,\"numSyllables\");var wordToShow=[];if(result.length!==0){wordToShow.push(/*#__PURE__*/_jsxs(\"h2\",{children:[\"Words that rhyme with \",input,\": \"]},\"title\"));Object.entries(groupOutput).map(function(_ref,index){var _ref2=_slicedToArray(_ref,2),numSyllables=_ref2[0],items=_ref2[1];// console.log(\"@@@@\",items);\nwordToShow.push(/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Syllables: \",numSyllables,\" \"]},'title'+index),/*#__PURE__*/_jsx(\"ul\",{children:generateWords(items)},'ul'+index)]},index));});}else{wordToShow.push(/*#__PURE__*/_jsx(\"p\",{children:\"(no results)\"}));}setOutput(wordToShow);};function addToSavedWords(item){setSaved(function(previousList){return[].concat(_toConsumableArray(previousList),[item]);});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(WordList,{wordList:saved})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-group col\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Please enter a word\",onChange:function onChange(e){setInput(e.target.value);},onKeyDown:function onKeyDown(e){if(e.key===\"Enter\"){datamuseRequest(getRhymeUrl(input),rhyme);}}}),/*#__PURE__*/_jsx(RhymeButton,{input:input,rhyme:rhyme,datamuseRequest:datamuseRequest,getRhymeUrl:getRhymeUrl}),/*#__PURE__*/_jsx(SynonymsButton,{input:input,datamuseRequest:datamuseRequest,generate:generateWords,OutputList:setOutput})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"col\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"output row\",children:/*#__PURE__*/_jsx(\"output\",{className:\"col\",children:output})})]});};export default OutputList;","map":{"version":3,"sources":["/Users/wenjiewu/Desktop/hw6/src/components/Output.js"],"names":["useState","WordList","RhymeButton","SynonymsButton","OutputList","input","setInput","output","setOutput","saved","setSaved","groupBy","objects","property","propName","obj","groupedObjects","Map","object","groupName","has","set","get","push","result","Array","from","keys","sort","key","getRhymeUrl","rel_rhy","datamuseRequest","url","callback","fetch","then","response","json","data","err","console","error","generateWords","term","wordlist","map","words","word","addToSavedWords","rhyme","groupOutput","wordToShow","length","Object","entries","index","numSyllables","items","item","previousList","e","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport WordList from \"./WordList\"\nimport RhymeButton from \"./RhymeButton\"\nimport SynonymsButton from \"./SynonymsButton\"\n\nconst OutputList = () => {\n    const [input, setInput] = useState();\n    const [output, setOutput] = useState();\n    const [saved, setSaved] = useState([]);\n\n    function groupBy(objects, property){\n\n        if(typeof property !== 'function') {\n            const propName = property;\n            property = (obj) => obj[propName];\n        }\n\n        const groupedObjects = new Map();\n\n        for(const object of objects) {\n            const groupName = property(object);\n\n            if(!groupedObjects.has(groupName)) {\n                groupedObjects.set(groupName, []);\n            }\n            groupedObjects.get(groupName).push(object);\n        }\n\n\n        const result = {};\n        for(const key of Array.from(groupedObjects.keys()).sort()) {\n            result[key] = groupedObjects.get(key);\n        }\n        return result;\n    };\n\n    function getRhymeUrl(rel_rhy) {\n        return 'https://api.datamuse.com/words?rel_rhy='+input;\n    }\n\n    const datamuseRequest = (url, callback) => {\n        setOutput(()=>{\n            return <p>...Loading</p>\n        });\n        fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n\n                callback(data);\n            }, (err) => {\n                console.error(err);\n            });\n    };\n\n    function generateWords(term) {\n        const wordlist = term.map((words)=>{\n            return <li key={\"wd\"+words.word}>{words.word} <button onClick={()=>addToSavedWords(words.word)} type=\"button\" className=\"btn btn-secondary\">(save)</button> </li>\n        });\n        return wordlist;\n    }\n\n    const rhyme = (result) => {\n        const groupOutput = groupBy(result,\"numSyllables\");\n        const wordToShow = [];\n        if (result.length !== 0) {\n            wordToShow.push(<h2 key=\"title\">Words that rhyme with {input}: </h2>);\n            Object.entries(groupOutput).map(([numSyllables,items],index)=>{\n                // console.log(\"@@@@\",items);\n                wordToShow.push(\n                    <div key={index}>\n                        <h3 key={'title'+index}>Syllables: {numSyllables} </h3>\n                        <ul key={'ul'+index}>\n                            {generateWords(items)}\n                        </ul>\n                    </div>\n                )\n            })\n        } else {\n            wordToShow.push(<p>(no results)</p>);\n        }\n        setOutput(wordToShow);\n    };\n\n    function addToSavedWords(item) {\n        setSaved((previousList)=> {\n            return [...previousList,item]\n        })\n    };\n\n    return (\n        <>\n            <div className=\"row\">\n                <WordList wordList={saved}/>\n            </div>\n            <div className=\"row\">\n                <div className=\"input-group col\">\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Please enter a word\"\n                           onChange={(e)=>{\n                               setInput(e.target.value);\n\n                           }}\n\n                           onKeyDown={(e) => {\n                               if (e.key===\"Enter\"){\n\n                                   datamuseRequest(getRhymeUrl(input),rhyme);\n                               }}}\n                    />\n                    <RhymeButton\n                        input={input}\n                        rhyme={rhyme}\n                        datamuseRequest={datamuseRequest}\n                        getRhymeUrl={getRhymeUrl}\n                    />\n                    <SynonymsButton\n                        input={input}\n                        datamuseRequest={datamuseRequest}\n                        generate={generateWords}\n                        OutputList={setOutput}\n                    />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <h2 className=\"col\"></h2>\n            </div>\n            <div className=\"output row\">\n                <output className=\"col\">{output}</output>\n            </div>\n        </>\n    )\n}\n\nexport default OutputList;"]},"metadata":{},"sourceType":"module"}