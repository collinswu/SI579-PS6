{"ast":null,"code":"var _jsxFileName = \"/Users/wenjiewu/Desktop/hw6/src/components/SynonymsButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SynonymsButton = props => {\n  const {\n    datamuseRequest,\n    inputWords,\n    generateWords,\n    setOutputWord\n  } = props;\n\n  function getDatamuseSimilarToUrl(ml) {\n    return `https://api.datamuse.com/words?${new URLSearchParams({\n      'ml': inputWords\n    }).toString()}`;\n  }\n\n  ;\n\n  function showSynonyms(output) {\n    console.log(output);\n    const wordToShow = [];\n\n    if (output.length !== 0) {\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Words with a similar meaning to \", inputWords, \": \"]\n      }, \"titleSyn\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 29\n      }, this));\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: generateWords(output)\n      }, 'ul', false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this));\n    } else {\n      wordToShow.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }, this));\n    }\n\n    setOutputWord(wordToShow);\n  }\n\n  ;\n\n  const synonyms = () => {\n    datamuseRequest(getDatamuseSimilarToUrl(inputWords), showSynonyms);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: synonyms,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    children: \"Show synonyms\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SynonymsButton;\nexport default SynonymsButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SynonymsButton\");","map":{"version":3,"sources":["/Users/wenjiewu/Desktop/hw6/src/components/SynonymsButton.js"],"names":["SynonymsButton","props","datamuseRequest","inputWords","generateWords","setOutputWord","getDatamuseSimilarToUrl","ml","URLSearchParams","toString","showSynonyms","output","console","log","wordToShow","length","push","synonyms"],"mappings":";;;AAAA,MAAMA,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAACC,IAAAA,eAAD;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA;AAA5C,MAA6DJ,KAAnE;;AAEA,WAASK,uBAAT,CAAiCC,EAAjC,EAAqC;AACjC,WAAQ,kCAAkC,IAAIC,eAAJ,CAAoB;AAAC,YAAML;AAAP,KAApB,CAAD,CAA0CM,QAA1C,EAAqD,EAA9F;AACH;;AAAA;;AAED,WAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,UAAU,GAAG,EAAnB;;AACA,QAAIH,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAA0B;AACtBD,MAAAA,UAAU,CAACE,IAAX,eAAgB;AAAA,uDAAoDb,UAApD;AAAA,SAAQ,UAAR;AAAA;AAAA;AAAA;AAAA,cAAhB;AACAW,MAAAA,UAAU,CAACE,IAAX,eACI;AAAA,kBACKZ,aAAa,CAACO,MAAD;AADlB,SAAQ,IAAR;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAPD,MAOO;AACHG,MAAAA,UAAU,CAACE,IAAX,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AACH;;AACDX,IAAAA,aAAa,CAACS,UAAD,CAAb;AACH;;AAAA;;AAED,QAAMG,QAAQ,GAAG,MAAM;AACnBf,IAAAA,eAAe,CAACI,uBAAuB,CAACH,UAAD,CAAxB,EAAqCO,YAArC,CAAf;AACH,GAFD;;AAIA,sBACI;AAAQ,IAAA,OAAO,EAAEO,QAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA9BD;;KAAMjB,c;AAgCN,eAAeA,cAAf","sourcesContent":["const SynonymsButton = (props) => {\n    const {datamuseRequest,inputWords, generateWords, setOutputWord} = props;\n\n    function getDatamuseSimilarToUrl(ml) {\n        return `https://api.datamuse.com/words?${(new URLSearchParams({'ml': inputWords})).toString()}`;\n    };\n\n    function showSynonyms(output) {\n        console.log(output);\n        const wordToShow = [];\n        if (output.length !== 0 ) {\n            wordToShow.push(<h2 key=\"titleSyn\">Words with a similar meaning to {inputWords}: </h2>)\n            wordToShow.push(\n                <ul key='ul'>\n                    {generateWords(output)}\n                </ul>\n            );\n        } else {\n            wordToShow.push(<p>no result</p>);\n        }\n        setOutputWord(wordToShow);\n    };\n\n    const synonyms = () => {\n        datamuseRequest(getDatamuseSimilarToUrl(inputWords),showSynonyms)\n    };\n\n    return (\n        <button onClick={synonyms} type=\"button\" className=\"btn btn-secondary\">Show synonyms</button>\n    )\n};\n\nexport default SynonymsButton;"]},"metadata":{},"sourceType":"module"}